# JMH version: 1.21
# VM version: JDK 11.0.5, OpenJDK 64-Bit Server VM, 11.0.5+10-post-Ubuntu-0ubuntu1.118.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -javaagent:/opt/idea-IC-182.4323.46/lib/idea_rt.jar=46167:/opt/idea-IC-182.4323.46/bin -Dfile.encoding=UTF-8
# Warmup: 7 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark.reflectionSetters

# Run progress: 91,67% complete, ETA 00:00:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 399,232 ns/op
# Warmup Iteration   2: 69,318 ns/op
# Warmup Iteration   3: 72,581 ns/op
# Warmup Iteration   4: 59,004 ns/op
# Warmup Iteration   5: 59,048 ns/op
# Warmup Iteration   6: 58,868 ns/op
# Warmup Iteration   7: 58,352 ns/op
Iteration   1: 58,312 ns/op
Iteration   2: 62,525 ns/op
Iteration   3: 58,315 ns/op
Iteration   4: 57,753 ns/op
Iteration   5: 58,522 ns/op
Iteration   6: 57,764 ns/op
Iteration   7: 58,514 ns/op
Iteration   8: 61,754 ns/op
Iteration   9: 59,739 ns/op
Iteration  10: 58,409 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark.reflectionSetters":
  59,161 ±(99.9%) 2,526 ns/op [Average]
  (min, avg, max) = (57,753, 59,161, 62,525), stdev = 1,671
  CI (99.9%): [56,634, 61,687] (assumes normal distribution)

Secondary result "dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark.reflectionSetters:·asm":
PrintAssembly processed: 157576 total address lines.
Perf output processed (skipped 18,805 seconds):
 Column 1: cycles (10398 events)

Hottest code regions (>10,00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters, version 706 (708 bytes) 

            0x00007f02f71ad54a: callq   %r10
         ╭  0x00007f02f71ad54d: jmp     0x7f02f71ad55c
         │  0x00007f02f71ad54f: mov     %rdi,0xfffffffffffffff8(%r11,%r10)
         │                                                ;*aastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@42 (line 237)
         │  0x00007f02f71ad554: add     $0xfffffffffffffff8,%r10
         │                                                ;*aastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@21 (line 236)
         │  0x00007f02f71ad558: mov     %r10,0x70(%r15)   ;*aastore {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@42 (line 237)
  0,06%  ↘  0x00007f02f71ad55c: movzbl  0xc(%r12,%r14,8),%ebp  ;*getfield override {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@1 (line 556)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
                                                          ; implicit exception: dispatches to 0x00007f02f71addd6
  0,18%     0x00007f02f71ad562: test    %ebp,%ebp
            0x00007f02f71ad564: jne     0x7f02f71adaa6    ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@4 (line 556)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,04%     0x00007f02f71ad56a: mov     0x28(%r12,%r14,8),%r8d  ;*getfield clazz {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@14 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,43%     0x00007f02f71ad56f: mov     0x24(%r12,%r14,8),%r10d  ;*getfield modifiers {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@18 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,05%     0x00007f02f71ad574: mov     %r10d,%r11d
  0,14%     0x00007f02f71ad577: and     $0x8,%r11d        ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isStatic@3 (line 105)
                                                          ; - java.lang.reflect.Method::invoke@21 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,05%     0x00007f02f71ad57b: test    %r11d,%r11d
  0,02%     0x00007f02f71ad57e: jne     0x7f02f71adc1a    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@24 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,47%     0x00007f02f71ad584: cmp     $0xe2c9a964,%r8d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad58b: je      0x7f02f71adc42    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@2 (line 603)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,05%     0x00007f02f71ad591: mov     0x10(%r12,%r14,8),%r9d  ;*getfield securityCheckCache {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@8 (line 606)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,10%     0x00007f02f71ad596: mov     %r10d,%ebp
  0,03%     0x00007f02f71ad599: and     $0x4,%ebp         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isProtected@2 (line 93)
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,38%     0x00007f02f71ad59c: test    %ebp,%ebp
            0x00007f02f71ad59e: jne     0x7f02f71adc6a    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isProtected@3 (line 93)
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,03%     0x00007f02f71ad5a4: cmp     $0xe2c9a964,%r9d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad5ab: jne     0x7f02f71adabe    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@69 (line 620)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,17%     0x00007f02f71ad5b1: mov     0x50(%r12,%r14,8),%ebp  ;*getfield methodAccessor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@43 (line 562)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,07%     0x00007f02f71ad5b6: mov     0x8(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f02f71ade2e
  0,48%     0x00007f02f71ad5bb: cmp     $0x2e7f9,%r10d    ;   {metadata(&apos;jdk/internal/reflect/DelegatingMethodAccessorImpl&apos;)}
            0x00007f02f71ad5c2: jne     0x7f02f71ad9a2
  0,04%     0x00007f02f71ad5c8: lea     (%r12,%rbp,8),%r10  ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,13%     0x00007f02f71ad5cc: mov     0xc(%r10),%r11d
  0,04%     0x00007f02f71ad5d0: mov     %r11,%rsi
  0,41%     0x00007f02f71ad5d3: shl     $0x3,%rsi         ;*getfield delegate {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@1 (line 43)
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
  0,04%     0x00007f02f71ad5d7: mov     0x8(%rsp),%rdx
  0,21%     0x00007f02f71ad5dc: mov     %rbx,%rcx
  0,31%     0x00007f02f71ad5df: nop
  0,08%     0x00007f02f71ad5e1: movabs  $0x840080840,%rax
  0,16%     0x00007f02f71ad5eb: callq   0x7f02efd18380    ; ImmutableOopMap{[0]=NarrowOop [8]=Oop }
                                                          ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=1}
                                                          ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@6 (line 43)
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@43 (line 237)
                                                          ;   {virtual_call}
  3,54%     0x00007f02f71ad5f0: mov     $0xe2c9a964,%r10d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad5f6: mov     0x88(%r12,%r10,8),%r9d
  0,03%     0x00007f02f71ad5fe: mov     0x118(%r15),%r8
  0,02%     0x00007f02f71ad605: mov     %r8,%r10
  0,66%     0x00007f02f71ad608: add     $0x18,%r10
  0,01%     0x00007f02f71ad60c: cmp     0x128(%r15),%r10
            0x00007f02f71ad613: jnb     0x7f02f71ad8ff    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@21 (line 236)
            0x00007f02f71ad619: mov     %r10,0x118(%r15)
  0,02%     0x00007f02f71ad620: prefetchnta 0xc0(%r10)
  0,60%     0x00007f02f71ad628: movq    $0x1,(%r8)
  0,09%     0x00007f02f71ad62f: prefetchnta 0x100(%r10)
            0x00007f02f71ad637: movl    $0x54f,0x8(%r8)   ;   {metadata(&apos;java/lang/Object&apos;[])}
  0,28%     0x00007f02f71ad63f: prefetchnta 0x140(%r10)
  0,42%     0x00007f02f71ad647: movl    $0x1,0xc(%r8)
  0,17%     0x00007f02f71ad64f: prefetchnta 0x180(%r10)
  0,05%     0x00007f02f71ad657: movq    $0x0,0x10(%r8)    ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@52 (line 238)
  0,24%     0x00007f02f71ad65f: mov     $0xe2c9a964,%r10d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
  0,43%     0x00007f02f71ad665: mov     0x70(%r12,%r10,8),%r11d  ;*getstatic o1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@57 (line 238)
  0,07%     0x00007f02f71ad66a: mov     %r11d,0x10(%r8)   ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@60 (line 238)
  0,55%     0x00007f02f71ad66e: movzbl  0xc(%r12,%r9,8),%ebp  ;*getfield override {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@1 (line 556)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
                                                          ; implicit exception: dispatches to 0x00007f02f71addea
  0,03%     0x00007f02f71ad674: test    %ebp,%ebp
            0x00007f02f71ad676: jne     0x7f02f71adae6    ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@4 (line 556)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,35%     0x00007f02f71ad67c: mov     0x24(%r12,%r9,8),%r11d  ;*getfield modifiers {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@18 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,05%     0x00007f02f71ad681: mov     0x28(%r12,%r9,8),%ebx  ;*getfield clazz {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@14 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,23%     0x00007f02f71ad686: mov     %r11d,%r10d
            0x00007f02f71ad689: and     $0x8,%r10d        ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isStatic@3 (line 105)
                                                          ; - java.lang.reflect.Method::invoke@21 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,29%     0x00007f02f71ad68d: test    %r10d,%r10d
            0x00007f02f71ad690: jne     0x7f02f71adc92    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@24 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,05%     0x00007f02f71ad696: cmp     $0xe2c9a964,%ebx  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad69c: je      0x7f02f71adcba    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@2 (line 603)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,22%     0x00007f02f71ad6a2: mov     0x10(%r12,%r9,8),%r10d  ;*getfield securityCheckCache {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@8 (line 606)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,03%     0x00007f02f71ad6a7: mov     %r11d,%ebp
  0,39%     0x00007f02f71ad6aa: and     $0x4,%ebp         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isProtected@2 (line 93)
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,01%     0x00007f02f71ad6ad: test    %ebp,%ebp
            0x00007f02f71ad6af: jne     0x7f02f71adce2    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isProtected@3 (line 93)
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,16%     0x00007f02f71ad6b5: cmp     $0xe2c9a964,%r10d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad6bc: jne     0x7f02f71adafe    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@69 (line 620)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
            0x00007f02f71ad6c2: mov     0x50(%r12,%r9,8),%ebp  ;*getfield methodAccessor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@43 (line 562)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,44%     0x00007f02f71ad6c7: mov     0x8(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x00007f02f71ade46
  1,32%     0x00007f02f71ad6cc: cmp     $0x2e7f9,%r11d    ;   {metadata(&apos;jdk/internal/reflect/DelegatingMethodAccessorImpl&apos;)}
            0x00007f02f71ad6d3: jne     0x7f02f71ad9b6
  0,54%     0x00007f02f71ad6d9: lea     (%r12,%rbp,8),%r11  ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,01%     0x00007f02f71ad6dd: mov     0xc(%r11),%r11d
  0,16%     0x00007f02f71ad6e1: mov     %r11,%rsi
  0,04%     0x00007f02f71ad6e4: shl     $0x3,%rsi         ;*getfield delegate {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@1 (line 43)
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
  0,38%     0x00007f02f71ad6e8: mov     0x8(%rsp),%rdx
  0,25%     0x00007f02f71ad6ed: mov     %r8,%rcx
  0,01%     0x00007f02f71ad6f0: nop
  0,49%     0x00007f02f71ad6f1: movabs  $0xffffffffffffffff,%rax
            0x00007f02f71ad6fb: callq   0x7f02ef6e66e0    ; ImmutableOopMap{[0]=NarrowOop [8]=Oop }
                                                          ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=1}
                                                          ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@6 (line 43)
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@61 (line 238)
                                                          ;   {virtual_call}
  0,46%     0x00007f02f71ad700: mov     $0xe2c9a964,%r11d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
  0,53%     0x00007f02f71ad706: mov     0x8c(%r12,%r11,8),%r11d
  0,03%     0x00007f02f71ad70e: mov     0x118(%r15),%rcx
  0,03%     0x00007f02f71ad715: mov     %rcx,%r10
  0,17%     0x00007f02f71ad718: add     $0x18,%r10
  0,48%     0x00007f02f71ad71c: cmp     0x128(%r15),%r10
            0x00007f02f71ad723: jnb     0x7f02f71ad923    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@21 (line 236)
  0,03%     0x00007f02f71ad729: mov     %r10,0x118(%r15)
            0x00007f02f71ad730: prefetchnta 0xc0(%r10)
  0,18%     0x00007f02f71ad738: movq    $0x1,(%rcx)
  0,56%     0x00007f02f71ad73f: prefetchnta 0x100(%r10)
  0,01%     0x00007f02f71ad747: movl    $0x54f,0x8(%rcx)  ;   {metadata(&apos;java/lang/Object&apos;[])}
  0,05%     0x00007f02f71ad74e: prefetchnta 0x140(%r10)
  0,15%     0x00007f02f71ad756: movl    $0x1,0xc(%rcx)
  0,60%     0x00007f02f71ad75d: prefetchnta 0x180(%r10)
  0,05%     0x00007f02f71ad765: movq    $0x0,0x10(%rcx)   ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@70 (line 239)
  0,05%     0x00007f02f71ad76d: mov     $0xe2c9a964,%r8d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
  0,13%     0x00007f02f71ad773: mov     0x74(%r12,%r8,8),%r10d  ;*getstatic s1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@75 (line 239)
  0,46%     0x00007f02f71ad778: mov     %r10d,0x10(%rcx)  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@78 (line 239)
  0,37%     0x00007f02f71ad77c: movzbl  0xc(%r12,%r11,8),%ebp  ;*getfield override {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@1 (line 556)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
                                                          ; implicit exception: dispatches to 0x00007f02f71addfe
  0,04%     0x00007f02f71ad782: test    %ebp,%ebp
            0x00007f02f71ad784: jne     0x7f02f71adb26    ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@4 (line 556)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,11%     0x00007f02f71ad78a: mov     0x24(%r12,%r11,8),%r9d  ;*getfield modifiers {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@18 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,34%     0x00007f02f71ad78f: mov     0x28(%r12,%r11,8),%r10d  ;*getfield clazz {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@14 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,15%     0x00007f02f71ad794: mov     %r9d,%r8d
  0,02%     0x00007f02f71ad797: and     $0x8,%r8d         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isStatic@3 (line 105)
                                                          ; - java.lang.reflect.Method::invoke@21 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,07%     0x00007f02f71ad79b: test    %r8d,%r8d
            0x00007f02f71ad79e: jne     0x7f02f71add06    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@24 (line 559)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,45%     0x00007f02f71ad7a4: cmp     $0xe2c9a964,%r10d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad7ab: je      0x7f02f71add2e    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@2 (line 603)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,10%     0x00007f02f71ad7b1: mov     0x10(%r12,%r11,8),%ebx  ;*getfield securityCheckCache {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@8 (line 606)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,02%     0x00007f02f71ad7b6: mov     %r9d,%ebp
  0,02%     0x00007f02f71ad7b9: and     $0x4,%ebp         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isProtected@2 (line 93)
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,44%     0x00007f02f71ad7bc: test    %ebp,%ebp
            0x00007f02f71ad7be: jne     0x7f02f71add56    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Modifier::isProtected@3 (line 93)
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,11%     0x00007f02f71ad7c4: cmp     $0xe2c9a964,%ebx  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
            0x00007f02f71ad7ca: jne     0x7f02f71adb3e    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.AccessibleObject::verifyAccess@69 (line 620)
                                                          ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                          ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,01%     0x00007f02f71ad7d0: mov     0x50(%r12,%r11,8),%ebp  ;*getfield methodAccessor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@43 (line 562)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,08%     0x00007f02f71ad7d5: mov     0x8(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f02f71ade5e
  0,94%     0x00007f02f71ad7da: cmp     $0x2e7f9,%r10d    ;   {metadata(&apos;jdk/internal/reflect/DelegatingMethodAccessorImpl&apos;)}
            0x00007f02f71ad7e1: jne     0x7f02f71ad9ca
  0,24%     0x00007f02f71ad7e7: lea     (%r12,%rbp,8),%r10  ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,01%     0x00007f02f71ad7eb: mov     0xc(%r10),%r11d
  0,03%     0x00007f02f71ad7ef: mov     %r11,%rsi
  0,38%     0x00007f02f71ad7f2: shl     $0x3,%rsi         ;*getfield delegate {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@1 (line 43)
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
  0,20%     0x00007f02f71ad7f6: mov     0x8(%rsp),%rdx
  0,06%     0x00007f02f71ad7fb: nop
  0,43%     0x00007f02f71ad7fd: movabs  $0x8400a0040,%rax
  0,17%     0x00007f02f71ad807: callq   0x7f02f71ac640    ; ImmutableOopMap{[8]=Oop }
                                                          ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=1}
                                                          ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@6 (line 43)
                                                          ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                          ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@79 (line 239)
                                                          ;   {virtual_call}
  0,09%     0x00007f02f71ad80c: mov     0x8(%rsp),%rax
  0,76%     0x00007f02f71ad811: add     $0x40,%rsp
  0,06%     0x00007f02f71ad815: pop     %rbp
  0,07%     0x00007f02f71ad816: mov     0x108(%r15),%r10
  0,02%     0x00007f02f71ad81d: test    %eax,(%r10)       ;   {poll_return}
  0,61%     0x00007f02f71ad820: retq
            0x00007f02f71ad821: mov     0x0(%rbp),%r11d
            0x00007f02f71ad825: test    %r11d,%r11d
            0x00007f02f71ad828: je      0x7f02f71ad318
            0x00007f02f71ad82e: mov     0x38(%r15),%r10
            0x00007f02f71ad832: mov     %r11,%rdi
            0x00007f02f71ad835: shl     $0x3,%rdi
            0x00007f02f71ad839: test    %r10,%r10
            0x00007f02f71ad83c: je      0x7f02f71ada42
            0x00007f02f71ad842: mov     0x48(%r15),%r11
            0x00007f02f71ad846: mov     %rdi,0xfffffffffffffff8(%r11,%r10)
....................................................................................................
 27,12%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters, version 706 (405 bytes) 

             0x00007f02f71ad364: test    %r11,%r11
         ╭   0x00007f02f71ad367: jne     0x7f02f71ad37b
         │   0x00007f02f71ad369: mov     %r15,%rsi
         │   0x00007f02f71ad36c: movabs  $0x7f030d302db0,%r10
         │   0x00007f02f71ad376: callq   %r10
         │╭  0x00007f02f71ad379: jmp     0x7f02f71ad388
         ↘│  0x00007f02f71ad37b: mov     %rdi,0xfffffffffffffff8(%r10,%r11)
          │  0x00007f02f71ad380: add     $0xfffffffffffffff8,%r11
          │  0x00007f02f71ad384: mov     %r11,0x70(%r15)   ;*aastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@21 (line 236)
  0,17%   ↘  0x00007f02f71ad388: movzbl  0xc(%r12,%rbx,8),%ebp  ;*getfield override {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@1 (line 556)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
                                                           ; implicit exception: dispatches to 0x00007f02f71addc2
  0,01%      0x00007f02f71ad38e: test    %ebp,%ebp
             0x00007f02f71ad390: jne     0x7f02f71ad9fe    ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@4 (line 556)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,23%      0x00007f02f71ad396: mov     0x24(%r12,%rbx,8),%r8d  ;*getfield modifiers {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@18 (line 559)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,26%      0x00007f02f71ad39b: mov     0x28(%r12,%rbx,8),%r9d  ;*getfield clazz {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@14 (line 558)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,15%      0x00007f02f71ad3a0: mov     %r8d,%r11d
  0,04%      0x00007f02f71ad3a3: and     $0x8,%r11d        ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Modifier::isStatic@3 (line 105)
                                                           ; - java.lang.reflect.Method::invoke@21 (line 559)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,27%      0x00007f02f71ad3a7: test    %r11d,%r11d
             0x00007f02f71ad3aa: jne     0x7f02f71adb66    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@24 (line 559)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,20%      0x00007f02f71ad3b0: test    %r14d,%r14d
             0x00007f02f71ad3b3: je      0x7f02f71ad947    ;*invokevirtual getClass {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@32 (line 559)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,16%      0x00007f02f71ad3b9: cmp     $0xe2c9a964,%r9d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
  0,03%      0x00007f02f71ad3c0: je      0x7f02f71adb92    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.AccessibleObject::verifyAccess@2 (line 603)
                                                           ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                           ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,18%      0x00007f02f71ad3c6: mov     0x10(%r12,%rbx,8),%r10d  ;*getfield securityCheckCache {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.AccessibleObject::verifyAccess@8 (line 606)
                                                           ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                           ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,23%      0x00007f02f71ad3cb: mov     %r8d,%ebp
  0,20%      0x00007f02f71ad3ce: and     $0x4,%ebp         ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Modifier::isProtected@2 (line 93)
                                                           ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                           ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                           ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,03%      0x00007f02f71ad3d1: test    %ebp,%ebp
             0x00007f02f71ad3d3: jne     0x7f02f71adbba    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Modifier::isProtected@3 (line 93)
                                                           ; - java.lang.reflect.AccessibleObject::verifyAccess@19 (line 608)
                                                           ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                           ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,29%      0x00007f02f71ad3d9: cmp     $0xe2c9a964,%r10d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
             0x00007f02f71ad3e0: jne     0x7f02f71ada1a    ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.AccessibleObject::verifyAccess@69 (line 620)
                                                           ; - java.lang.reflect.AccessibleObject::checkAccess@6 (line 590)
                                                           ; - java.lang.reflect.Method::invoke@39 (line 558)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,20%      0x00007f02f71ad3e6: mov     0x50(%r12,%rbx,8),%ebp  ;*getfield methodAccessor {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@43 (line 562)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,16%      0x00007f02f71ad3eb: mov     0x8(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x00007f02f71ade12
  0,22%      0x00007f02f71ad3f0: cmp     $0x2e7f9,%r11d    ;   {metadata(&apos;jdk/internal/reflect/DelegatingMethodAccessorImpl&apos;)}
             0x00007f02f71ad3f7: jne     0x7f02f71ad98a
  0,20%      0x00007f02f71ad3fd: lea     (%r12,%rbp,8),%r10  ;*invokeinterface invoke {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,17%      0x00007f02f71ad401: mov     0xc(%r10),%r10d
  0,13%      0x00007f02f71ad405: lea     (%r12,%r14,8),%r11  ;*getfield pojo {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@1 (line 235)
  0,05%      0x00007f02f71ad409: mov     %r11,0x8(%rsp)
  0,35%      0x00007f02f71ad40e: mov     %r14d,(%rsp)
  0,14%      0x00007f02f71ad412: mov     %r10,%rsi
  0,13%      0x00007f02f71ad415: shl     $0x3,%rsi         ;*getfield delegate {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@1 (line 43)
                                                           ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
  0,02%      0x00007f02f71ad419: mov     %r11,%rdx
  0,24%      0x00007f02f71ad41c: mov     %r13,%rcx
  0,13%      0x00007f02f71ad41f: nop
  0,13%      0x00007f02f71ad421: movabs  $0xffffffffffffffff,%rax
  0,02%      0x00007f02f71ad42b: callq   0x7f02ef6e66a0    ; ImmutableOopMap{[0]=NarrowOop [8]=Oop }
                                                           ;*invokevirtual invoke {reexecute=0 rethrow=0 return_oop=1}
                                                           ; - jdk.internal.reflect.DelegatingMethodAccessorImpl::invoke@6 (line 43)
                                                           ; - java.lang.reflect.Method::invoke@59 (line 566)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@22 (line 236)
                                                           ;   {virtual_call}
  2,38%      0x00007f02f71ad430: mov     0x118(%r15),%rbx
  0,04%      0x00007f02f71ad437: mov     %rbx,%r10
  0,03%      0x00007f02f71ad43a: add     $0x18,%r10
  0,07%      0x00007f02f71ad43e: mov     $0xe2c9a964,%r8d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
  0,61%      0x00007f02f71ad444: mov     0x84(%r12,%r8,8),%r14d
  0,02%      0x00007f02f71ad44c: cmp     0x128(%r15),%r10
             0x00007f02f71ad453: jnb     0x7f02f71ad8da    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@21 (line 236)
  0,02%      0x00007f02f71ad459: mov     %r10,0x118(%r15)
  0,01%      0x00007f02f71ad460: prefetchnta 0xc0(%r10)
  0,60%      0x00007f02f71ad468: movq    $0x1,(%rbx)
  0,03%      0x00007f02f71ad46f: prefetchnta 0x100(%r10)
  0,05%      0x00007f02f71ad477: movl    $0x54f,0x8(%rbx)  ;   {metadata(&apos;java/lang/Object&apos;[])}
  0,05%      0x00007f02f71ad47e: prefetchnta 0x140(%r10)
  0,61%      0x00007f02f71ad486: movl    $0x1,0xc(%rbx)
  0,05%      0x00007f02f71ad48d: prefetchnta 0x180(%r10)
  0,10%      0x00007f02f71ad495: movq    $0x0,0x10(%rbx)   ;*anewarray {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@31 (line 237)
  0,20%      0x00007f02f71ad49d: mov     $0xe2c9a964,%r11d  ;   {oop(a &apos;java/lang/Class&apos;{0x00000007164d4b20} = &apos;dev/jgardo/jvm/miscellaneous/reflect/ReflectionBenchmark&apos;)}
  0,43%      0x00007f02f71ad4a3: mov     0xb8(%r12,%r11,8),%r11  ;*getstatic l1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@36 (line 237)
  0,05%      0x00007f02f71ad4ab: cmp     $0xffffffffffffff80,%r11
             0x00007f02f71ad4af: jl      0x7f02f71ada6f    ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.Long::valueOf@9 (line 1177)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@39 (line 237)
  0,05%      0x00007f02f71ad4b5: cmp     $0x7f,%r11
             0x00007f02f71ad4b9: jnle    0x7f02f71adbe6    ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.Long::valueOf@17 (line 1177)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@39 (line 237)
  0,10%      0x00007f02f71ad4bf: mov     %r11d,%r10d       ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.Long::valueOf@24 (line 1178)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@39 (line 237)
  0,44%      0x00007f02f71ad4c2: mov     %r10d,%ebp
  0,03%      0x00007f02f71ad4c5: add     $0x80,%ebp        ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.Long::valueOf@28 (line 1178)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@39 (line 237)
  0,04%      0x00007f02f71ad4cb: cmp     $0x100,%ebp
             0x00007f02f71ad4d1: jnb     0x7f02f71ad956
  0,11%      0x00007f02f71ad4d7: mov     %rbx,%r11
  0,52%      0x00007f02f71ad4da: add     $0x10,%r11
  0,02%      0x00007f02f71ad4de: movsxd  %r10d,%r10
  0,07%      0x00007f02f71ad4e1: mov     %r11,%r8          ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@42 (line 237)
  0,05%      0x00007f02f71ad4e4: movabs  $0x7166ae040,%r9  ;   {oop(a &apos;java/lang/Long&apos;[256] {0x00000007166ae040})}
  0,56%      0x00007f02f71ad4ee: mov     0x210(%r9,%r10,4),%r10d  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.lang.Long::valueOf@29 (line 1178)
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@39 (line 237)
  0,10%      0x00007f02f71ad4f6: mov     %r10d,(%r11)
  0,13%      0x00007f02f71ad4f9: shl     $0x3,%r10
  0,08%      0x00007f02f71ad4fd: xor     %r8,%r10
  0,52%      0x00007f02f71ad500: shr     $0x14,%r10
  0,36%      0x00007f02f71ad504: test    %r10,%r10
             0x00007f02f71ad507: je      0x7f02f71ad55c
  0,36%      0x00007f02f71ad509: shr     $0x9,%r8
  0,08%      0x00007f02f71ad50d: movabs  $0x7f02ea372000,%rdi
  0,19%      0x00007f02f71ad517: add     %r8,%rdi
  0,02%      0x00007f02f71ad51a: cmpb    $0x20,(%rdi)
  0,43%      0x00007f02f71ad51d: je      0x7f02f71ad55c
             0x00007f02f71ad51f: mov     0x70(%r15),%r10
             0x00007f02f71ad523: mov     0x80(%r15),%r11
             0x00007f02f71ad52a: lock addl $0x0,0xffffffffffffffc0(%rsp)
             0x00007f02f71ad530: cmpb    $0x0,(%rdi)
             0x00007f02f71ad533: je      0x7f02f71ad55c
             0x00007f02f71ad535: movb    $0x0,(%rdi)
             0x00007f02f71ad538: test    %r10,%r10
             0x00007f02f71ad53b: jne     0x7f02f71ad54f    ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters@21 (line 236)
             0x00007f02f71ad53d: mov     %r15,%rsi
....................................................................................................
 14,29%  <total for region 2>

....[Hottest Regions]...............................................................................
 27,12%         c2, level 4  dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters, version 706 (708 bytes) 
 14,29%         c2, level 4  dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters, version 706 (405 bytes) 
  9,68%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor2::invoke, version 708 (183 bytes) 
  9,52%         c2, level 4  dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters, version 706 (281 bytes) 
  7,79%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor3::invoke, version 712 (139 bytes) 
  7,57%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor1::invoke, version 709 (174 bytes) 
  7,40%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor4::invoke, version 705 (163 bytes) 
  3,97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 707 (75 bytes) 
  3,76%         c2, level 4  dev.jgardo.jvm.miscellaneous.reflect.generated.ReflectionBenchmark_reflectionSetters_jmhTest::reflectionSetters_avgt_jmhStub, version 749 (55 bytes) 
  1,28%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor4::invoke, version 705 (17 bytes) 
  0,78%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor3::invoke, version 712 (17 bytes) 
  0,34%   [kernel.kallsyms]  [unknown] (1 bytes) 
  0,16%   [kernel.kallsyms]  [unknown] (5 bytes) 
  0,16%        libc-2.27.so  malloc_consolidate (122 bytes) 
  0,13%                      <unknown> (19 bytes) 
  0,13%        libc-2.27.so  malloc (0 bytes) 
  0,12%   [kernel.kallsyms]  [unknown] (0 bytes) 
  0,12%        libc-2.27.so  malloc_consolidate (30 bytes) 
  0,09%   [kernel.kallsyms]  [unknown] (37 bytes) 
  0,08%   [kernel.kallsyms]  [unknown] (17 bytes) 
  5,50%  <...other 401 warm regions...>
....................................................................................................
 99,99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50,93%         c2, level 4  dev.jgardo.jvm.miscellaneous.reflect.ReflectionBenchmark::reflectionSetters, version 706 
  9,68%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor2::invoke, version 708 
  8,67%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor4::invoke, version 705 
  8,57%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor3::invoke, version 712 
  7,57%         c2, level 4  jdk.internal.reflect.GeneratedMethodAccessor1::invoke, version 709 
  3,97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 707 
  3,76%         c2, level 4  dev.jgardo.jvm.miscellaneous.reflect.generated.ReflectionBenchmark_reflectionSetters_jmhTest::reflectionSetters_avgt_jmhStub, version 749 
  2,60%   [kernel.kallsyms]  [unknown] 
  1,53%           libjvm.so  [unknown] 
  0,81%                      <unknown> 
  0,34%        libc-2.27.so  malloc 
  0,32%        libc-2.27.so  _int_malloc 
  0,31%        libc-2.27.so  malloc_consolidate 
  0,26%        libc-2.27.so  cfree@GLIBC_2.2.5 
  0,08%        libc-2.27.so  vfprintf 
  0,07%        libc-2.27.so  __memset_sse2_unaligned_erms 
  0,06%          ld-2.27.so  __tls_get_addr 
  0,04%        libc-2.27.so  __GI___libc_write 
  0,04%        libc-2.27.so  _IO_default_xsputn 
  0,03%              [vdso]  [unknown] 
  0,37%  <...other 28 warm methods...>
....................................................................................................
 99,99%  <totals>

....[Distribution by Source]........................................................................
 93,16%         c2, level 4
  2,60%   [kernel.kallsyms]
  1,63%        libc-2.27.so
  1,53%           libjvm.so
  0,81%                    
  0,09%         interpreter
  0,06%          ld-2.27.so
  0,05%              [vdso]
  0,03%  libpthread-2.27.so
  0,02%         c1, level 3
  0,01%        runtime stub
  0,01%      libz.so.1.2.11
....................................................................................................
 99,99%  <totals>
